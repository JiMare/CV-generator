/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StyleImport } from './routes/style'
import { Route as WizardRouteImport } from './routes/wizard/route'
import { Route as IndexImport } from './routes/index'
import { Route as WizardSummaryImport } from './routes/wizard/summary'
import { Route as WizardSkillsImport } from './routes/wizard/skills'
import { Route as WizardPersonalImport } from './routes/wizard/personal'
import { Route as WizardExperienceImport } from './routes/wizard/experience'

// Create/Update Routes

const StyleRoute = StyleImport.update({
  id: '/style',
  path: '/style',
  getParentRoute: () => rootRoute,
} as any)

const WizardRouteRoute = WizardRouteImport.update({
  id: '/wizard',
  path: '/wizard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WizardSummaryRoute = WizardSummaryImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => WizardRouteRoute,
} as any)

const WizardSkillsRoute = WizardSkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => WizardRouteRoute,
} as any)

const WizardPersonalRoute = WizardPersonalImport.update({
  id: '/personal',
  path: '/personal',
  getParentRoute: () => WizardRouteRoute,
} as any)

const WizardExperienceRoute = WizardExperienceImport.update({
  id: '/experience',
  path: '/experience',
  getParentRoute: () => WizardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/wizard': {
      id: '/wizard'
      path: '/wizard'
      fullPath: '/wizard'
      preLoaderRoute: typeof WizardRouteImport
      parentRoute: typeof rootRoute
    }
    '/style': {
      id: '/style'
      path: '/style'
      fullPath: '/style'
      preLoaderRoute: typeof StyleImport
      parentRoute: typeof rootRoute
    }
    '/wizard/experience': {
      id: '/wizard/experience'
      path: '/experience'
      fullPath: '/wizard/experience'
      preLoaderRoute: typeof WizardExperienceImport
      parentRoute: typeof WizardRouteImport
    }
    '/wizard/personal': {
      id: '/wizard/personal'
      path: '/personal'
      fullPath: '/wizard/personal'
      preLoaderRoute: typeof WizardPersonalImport
      parentRoute: typeof WizardRouteImport
    }
    '/wizard/skills': {
      id: '/wizard/skills'
      path: '/skills'
      fullPath: '/wizard/skills'
      preLoaderRoute: typeof WizardSkillsImport
      parentRoute: typeof WizardRouteImport
    }
    '/wizard/summary': {
      id: '/wizard/summary'
      path: '/summary'
      fullPath: '/wizard/summary'
      preLoaderRoute: typeof WizardSummaryImport
      parentRoute: typeof WizardRouteImport
    }
  }
}

// Create and export the route tree

interface WizardRouteRouteChildren {
  WizardExperienceRoute: typeof WizardExperienceRoute
  WizardPersonalRoute: typeof WizardPersonalRoute
  WizardSkillsRoute: typeof WizardSkillsRoute
  WizardSummaryRoute: typeof WizardSummaryRoute
}

const WizardRouteRouteChildren: WizardRouteRouteChildren = {
  WizardExperienceRoute: WizardExperienceRoute,
  WizardPersonalRoute: WizardPersonalRoute,
  WizardSkillsRoute: WizardSkillsRoute,
  WizardSummaryRoute: WizardSummaryRoute,
}

const WizardRouteRouteWithChildren = WizardRouteRoute._addFileChildren(
  WizardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/wizard': typeof WizardRouteRouteWithChildren
  '/style': typeof StyleRoute
  '/wizard/experience': typeof WizardExperienceRoute
  '/wizard/personal': typeof WizardPersonalRoute
  '/wizard/skills': typeof WizardSkillsRoute
  '/wizard/summary': typeof WizardSummaryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/wizard': typeof WizardRouteRouteWithChildren
  '/style': typeof StyleRoute
  '/wizard/experience': typeof WizardExperienceRoute
  '/wizard/personal': typeof WizardPersonalRoute
  '/wizard/skills': typeof WizardSkillsRoute
  '/wizard/summary': typeof WizardSummaryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/wizard': typeof WizardRouteRouteWithChildren
  '/style': typeof StyleRoute
  '/wizard/experience': typeof WizardExperienceRoute
  '/wizard/personal': typeof WizardPersonalRoute
  '/wizard/skills': typeof WizardSkillsRoute
  '/wizard/summary': typeof WizardSummaryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/wizard'
    | '/style'
    | '/wizard/experience'
    | '/wizard/personal'
    | '/wizard/skills'
    | '/wizard/summary'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/wizard'
    | '/style'
    | '/wizard/experience'
    | '/wizard/personal'
    | '/wizard/skills'
    | '/wizard/summary'
  id:
    | '__root__'
    | '/'
    | '/wizard'
    | '/style'
    | '/wizard/experience'
    | '/wizard/personal'
    | '/wizard/skills'
    | '/wizard/summary'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WizardRouteRoute: typeof WizardRouteRouteWithChildren
  StyleRoute: typeof StyleRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WizardRouteRoute: WizardRouteRouteWithChildren,
  StyleRoute: StyleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/wizard",
        "/style"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/wizard": {
      "filePath": "wizard/route.tsx",
      "children": [
        "/wizard/experience",
        "/wizard/personal",
        "/wizard/skills",
        "/wizard/summary"
      ]
    },
    "/style": {
      "filePath": "style.tsx"
    },
    "/wizard/experience": {
      "filePath": "wizard/experience.tsx",
      "parent": "/wizard"
    },
    "/wizard/personal": {
      "filePath": "wizard/personal.tsx",
      "parent": "/wizard"
    },
    "/wizard/skills": {
      "filePath": "wizard/skills.tsx",
      "parent": "/wizard"
    },
    "/wizard/summary": {
      "filePath": "wizard/summary.tsx",
      "parent": "/wizard"
    }
  }
}
ROUTE_MANIFEST_END */
